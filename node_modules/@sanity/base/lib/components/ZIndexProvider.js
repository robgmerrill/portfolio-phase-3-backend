"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useZIndex = useZIndex;
exports.ZIndexProvider = ZIndexProvider;

var _react = _interopRequireWildcard(require("react"));

var _sanityCssCustomProperties = _interopRequireDefault(require("sanity:css-custom-properties"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var defaults = {
  /*
    used by
    - Navbar
  */
  navbar: parseInt(_sanityCssCustomProperties.default['--zindex-navbar'], 10) || 200,
  navbarPopover: parseInt(_sanityCssCustomProperties.default['--zindex-navbar-popover'], 10) || 500000,
  navbarDialog: parseInt(_sanityCssCustomProperties.default['--zindex-navbar-dialog'], 10) || 500001,

  /*
    used by:
    - DefaultPane
  */
  pane: parseInt(_sanityCssCustomProperties.default['--zindex-pane'], 10) || 100,

  /*
    used by:
    - DefaultPane
  */
  paneResizer: parseInt(_sanityCssCustomProperties.default['--zindex-pane-resizer'], 10) || 150,

  /*
    used by:
    - EditItemFoldOut
    - Spinner
    - ConnectorsOverlay
    - tippy.css
    - BaseDateTimeInput
  */
  portal: parseInt(_sanityCssCustomProperties.default['--zindex-portal'], 10) || 200,

  /*
    used by tooltip
  */
  popover: parseInt(_sanityCssCustomProperties.default['--zindex-popover'], 10) || 200,

  /*
    used by google-maps-input
  */
  modal: parseInt(_sanityCssCustomProperties.default['--zindex-modal'], 10) || 200,

  /*
    used for movingItem in:
    packages/@sanity/base/src/styles/layout/helpers.css
  */
  movingItem: parseInt(_sanityCssCustomProperties.default['--zindex-moving-item'], 10) || 10000,

  /*
    used for shadow behind the navbar search, and behind sidemenu
  */
  drawershade: parseInt(_sanityCssCustomProperties.default['--zindex-drawershade'], 10) || 1000000,

  /*
    used for snackbar
  */
  drawer: parseInt(_sanityCssCustomProperties.default['--zindex-drawer'], 10) || 1000001,
  // NOT IN USE
  dropdown: parseInt(_sanityCssCustomProperties.default['--zindex-dropdown'], 10) || 200,
  navbarFixed: parseInt(_sanityCssCustomProperties.default['--zindex-navbar-fixed'], 10) || 1010,
  fullscreenEdit: parseInt(_sanityCssCustomProperties.default['--zindex-fullscreen-edit'], 10) || 1050,
  popoverBackground: parseInt(_sanityCssCustomProperties.default['--zindex-popover-background'], 10) || 1060,
  tooltip: parseInt(_sanityCssCustomProperties.default['--zindex-tooltip'], 10) || 200,
  modalBackground: parseInt(_sanityCssCustomProperties.default['--zindex-modal-background'], 10) || 2000,
  spinner: parseInt(_sanityCssCustomProperties.default['--zindex-spinner'], 10) || 3000
};
var ZIndexContext = /*#__PURE__*/(0, _react.createContext)(defaults);

function useZIndex() {
  return (0, _react.useContext)(ZIndexContext);
}

function ZIndexProvider(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/_react.default.createElement(ZIndexContext.Provider, {
    value: defaults
  }, children);
}